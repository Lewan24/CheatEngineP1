@using System.ComponentModel.DataAnnotations
@using CheatEngineP1.Entities
@using CheatEngineP1.Interfaces

@inject ISnackbar SnackBar
@inject IProcessMemoryWriter CheatWriterService

<MudDialog>
    <DialogContent>
        <EditForm Model="@_changePointerModel" OnValidSubmit="Submit">
            <DataAnnotationsValidator/>
            
            <MudCard Elevation="5" Class="p-4 m-4">
                <MudCardContent>
                    <MudTextField @bind-Value="@_changePointerModel.NewValue" T="int" For="@(() => _changePointerModel.NewValue)" Label="New Value"
                                  InputMode="InputMode.numeric" InputType="InputType.Number"/>
                </MudCardContent>
                <MudCardActions Class="d-flex flex-row flex-nowrap justify-content-between">
                    <MudButton Color="Color.Success" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Save</MudButton>
                    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Cancel">Close</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </DialogContent>
</MudDialog>

@code{
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;
    
    [Parameter] public ProcessMemoryPointerPath? Pointer { get; set; }
    [Parameter] public long? PointerShift { get; set; }
    
    private ChangePointerValueModel _changePointerModel = new();
    
    private void Submit()
    {
        try
        {
            CheatWriterService.WritePointerValue(Pointer!, PointerShift, _changePointerModel.NewValue);
            
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception e)
        {
            SnackBar.Add(e.Message, Severity.Error);
        }
    }

    private void Cancel()
        => MudDialog.Cancel();

    private record ChangePointerValueModel
    {
        [Required]
        [Range(1, 10000)]
        public int NewValue { get; set; }
    }
}